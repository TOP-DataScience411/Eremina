# ИСПОЛЬЗОВАТЬ везде: в большинстве случаев PEP 8 рекомендует добавлять пробелы вокруг бинарных операторов (исключения: оператор возведения в степень, операторы умножения и деления в длинных выражениях)
chislo = input('Введите положительное трёхзначное число: ')
chislo_int = int(chislo)
sotni = chislo_int // 100
desyatki = (chislo_int - sotni*100) // 10
edinic = chislo_int - sotni*100 - desyatki*10
# ПЕРЕИМЕНОВАТЬ: sum — это имя встроенной функции, объявляя собственную переменную с таким именем вы теряете прямой доступ к встроенной функции
sumd = sotni + desyatki + edinic
proizv = sotni * desyatki * edinic
# ИСПОЛЬЗОВАТЬ везде: PEP 8 рекомендует добавлять пробел между передаваемыми в функцию аргументами
print("Сумма цифр = ", sumd, "\nПроизведение цифр = ", proizv, sep='')
# ИСПОЛЬЗОВАТЬ: '\nabc' вместо '\n', 'abc'
#======================================================================
# C:\Users\Dina\GIT_LOK_Eremina>python "C:\Users\Dina\GIT_LOK_Eremina\2024.10.27\4.py"
# Введите положительное трёхзначное число: 333
# Сумма цифр = 9
# Произведение цифр = 27


# КОММЕНТАРИЙ: PEP 8 — сборник рекомендаций по стилистическому оформлению Python кода — их стоит использовать для большего удобства чтения своего и чужого кода: https://peps.python.org/pep-0008/


# ИТОГ: хорошо — 3/4

